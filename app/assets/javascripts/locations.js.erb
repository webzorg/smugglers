var tbilisi = {
  lat: 41.718155,
  lng: 44.765314
};
var batumi = {
  lat: 41.630437,
  lng: 41.634982
};

function TbilisiControl(controlDiv, map) {
  // Set CSS for the control border.
  var controlUI = document.createElement('div');
  controlUI.style.backgroundColor = '#fff';
  controlUI.style.border = '2px solid #fff';
  controlUI.style.borderRadius = '3px 0px 0px 3px';
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
  controlUI.style.cursor = 'pointer';
  controlUI.style.marginTop = '22px';
  controlUI.style.textAlign = 'center';
  controlUI.title = 'Go to Tbilisi';
  controlDiv.appendChild(controlUI);

  // Set CSS for the control interior.
  var controlText = document.createElement('div');
  controlText.style.color = 'rgb(25,25,25)';
  controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
  controlText.style.fontSize = '16px';
  controlText.style.lineHeight = '38px';
  controlText.style.paddingLeft = '5px';
  controlText.style.paddingRight = '5px';
  controlText.innerHTML = 'Tbilisi';
  controlUI.appendChild(controlText);

  // Setup the click event listeners: simply set the map to Chicago.
  controlUI.addEventListener('click', function() {
    map.setCenter(tbilisi);
  });

}

function BatumiControl(controlDiv, map) {
  // Set CSS for the control border.
  var controlUI = document.createElement('div');
  controlUI.style.backgroundColor = '#fff';
  controlUI.style.border = '2px solid #fff';
  controlUI.style.borderRadius = '0px 3px 3px 0px';
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
  controlUI.style.cursor = 'pointer';
  controlUI.style.marginTop = '22px';
  controlUI.style.textAlign = 'center';
  controlUI.title = 'Go to Batumi';
  controlDiv.appendChild(controlUI);

  // Set CSS for the control interior.
  var controlText = document.createElement('div');
  controlText.style.color = 'rgb(25,25,25)';
  controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
  controlText.style.fontSize = '16px';
  controlText.style.lineHeight = '38px';
  controlText.style.paddingLeft = '5px';
  controlText.style.paddingRight = '5px';
  controlText.innerHTML = 'Batumi';
  controlUI.appendChild(controlText);

  // Setup the click event listeners: simply set the map to Chicago.
  controlUI.addEventListener('click', function() {
    map.setCenter(batumi);
  });

}


function initMap() {
  // var layer = "watercolor";
  var map_options = {
    zoom: 14,
    minZoom:14,
    center: tbilisi,
    mapTypeControlOptions: {
      mapTypeIds: google.maps.MapTypeId.ROADMAP
    }
    // styles: style_array
  };

  var map = new google.maps.Map(document.getElementById('map'), map_options);
  // var bounds = new google.maps.LatLngBounds();

  // Create the DIV to hold the control and call the TbilisiControl()
  // constructor passing in this DIV.
  var tbilisiControlDiv = document.createElement('div');
  var batumiControlDiv = document.createElement('div');
  var tbilisiControl = new TbilisiControl(tbilisiControlDiv, map);
  var batumiControl = new BatumiControl(batumiControlDiv, map);

  tbilisiControlDiv.index = 1;
  batumiControlDiv.index = 2;
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(tbilisiControlDiv);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(batumiControlDiv);



  //////// Display multiple markers on a map
  var infoWindow = new google.maps.InfoWindow(), marker, c;
  for(c=0; c< markers.length; c++){
    var position = new google.maps.LatLng(markers[c][1], markers[c][2]);
    // bounds.extend(position);

    infowindow = new google.maps.InfoWindow({
     content: markers[c][0]
    });

    var marker = new google.maps.Marker({
      position: position,
      map: map,
      icon: "<%= asset_path('marker1.png') %>",
      title: markers[c][0]
    });

    // Allow each marker to have an info window
    google.maps.event.addListener(marker, 'click', (function(marker, c) {
      return function() {
        var content = ((markers[c][3] != "") ? "<br/> Tel: "+markers[c][3] : "");
        infoWindow.setContent(markers[c][0] + content);
        infoWindow.open(map, marker);
      }
    })(marker, c));

  }//for loop end
  // map.fitBounds(bounds);
}
